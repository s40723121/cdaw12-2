var tipuesearch = {"pages": [{'title': 'About', 'text': '此內容管理系統以\xa0 https://github.com/mdecourse/cmsimde \xa0作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作. \n 利用 cmsimde 建立靜態網誌方法: \n 1. 在 github 建立倉儲, git clone 到近端 \n 2. 參考\xa0 https://github.com/mdecourse/newcms , 加入除了 cmsimde 目錄外的所有內容 \n 以 git submodule add\xa0 https://github.com/mdecourse/cmsimde \xa0cmsimde \n 建立 cmsimde 目錄, 並從 github 取下子模組內容. \n 3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器. \n 動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端. \n 4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行: \n git clone --recurse-submodules  https://github.com/mdecourse/newcms.git \n', 'tags': '', 'url': 'About.html'}, {'title': 'Develop', 'text': 'https://github.com/mdecourse/cmsimde \xa0的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443\xa0就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容. \n cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版. \n init.py 位於\xa0 up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數. \n', 'tags': '', 'url': 'Develop.html'}, {'title': '40723145', 'text': '個人倉儲: https://github.com/s40723145/cd2020 \n 個人網站: https://s40723145.github.io/cd2020/ \n', 'tags': '', 'url': '40723145.html'}, {'title': 'Oauth2', 'text': '建立Google domains憑證 \n \n 將憑證的內容存為文字檔存在pj1資料夾的上一層 \n 再將config.py裡的oauth_scrum改為oauth_gm \n 接著在終端機啟動8443頁面 \n 進入8443頁面後要利用gm的帳號來登入即可看到相關頁面 \n', 'tags': '', 'url': 'Oauth2.html'}, {'title': 'course notes', 'text': 'week11: \n 複習Topic內容 \n \n 說明電子書內容所要表達的意涵 \n \n 使用虛擬主機啟動Ubuntu20.04 \n \n 網路設定說明 \n 示範建立網路連線 \n 在Linux系統下安裝套件 \n', 'tags': '', 'url': 'course notes.html'}]};